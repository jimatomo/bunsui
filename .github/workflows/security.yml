name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # 毎週月曜日の午前2時
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run safety check
      run: |
        safety check --json --output safety-report.json
        safety check --full-report
    
    - name: Run pip-audit
      run: |
        pip-audit --format json --output pip-audit-report.json || true
        pip-audit
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: dependency-security-reports
        path: |
          safety-report.json
          pip-audit-report.json

  code-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run bandit
      run: |
        bandit -r src/ -f json -o bandit-report.json
        bandit -r src/ -f txt -o bandit-report.txt
    
    - name: Run semgrep
      run: |
        semgrep ci --config auto --json --output semgrep-report.json || true
        semgrep ci --config auto
    
    - name: Upload code security reports
      uses: actions/upload-artifact@v3
      with:
        name: code-security-reports
        path: |
          bandit-report.json
          bandit-report.txt
          semgrep-report.json

  container-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t bunsui:latest .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'bunsui:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  secret-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Run TruffleHog
      run: |
        pip install truffleHog
        trufflehog --json . > trufflehog-report.json || true
        trufflehog .
    
    - name: Upload secret scan report
      uses: actions/upload-artifact@v3
      with:
        name: secret-scan-report
        path: trufflehog-report.json

  license-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run license check
      run: |
        pip install pip-licenses
        pip-licenses --format=json --output-file=licenses.json
        pip-licenses
    
    - name: Upload license report
      uses: actions/upload-artifact@v3
      with:
        name: license-report
        path: licenses.json

  security-summary:
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, container-scan, secret-scan, license-scan]
    if: always()
    
    steps:
    - name: Download all security reports
      uses: actions/download-artifact@v3
      with:
        path: security-reports
    
    - name: Generate security summary
      run: |
        echo "# Security Scan Summary" > security-summary.md
        echo "Generated on: $(date)" >> security-summary.md
        echo "" >> security-summary.md
        
        if [ -f "security-reports/dependency-security-reports/safety-report.json" ]; then
          echo "## Dependency Vulnerabilities" >> security-summary.md
          jq -r '.vulnerabilities[] | "- \(.package_name): \(.vulnerable_spec) - \(.advisory)"' security-reports/dependency-security-reports/safety-report.json >> security-summary.md || echo "No vulnerabilities found" >> security-summary.md
        fi
        
        if [ -f "security-reports/code-security-reports/bandit-report.json" ]; then
          echo "" >> security-summary.md
          echo "## Code Security Issues" >> security-summary.md
          jq -r '.results[] | "- \(.issue_text) in \(.filename):\(.line_number)"' security-reports/code-security-reports/bandit-report.json >> security-summary.md || echo "No issues found" >> security-summary.md
        fi
    
    - name: Upload security summary
      uses: actions/upload-artifact@v3
      with:
        name: security-summary
        path: security-summary.md 